@model Test3enc.Models.ViewModel.EncryptedFileViewModel
@using System.Linq
@{
    ViewData["Title"] = "File Encryption and Decryption";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/css/styles.css">
</head>
<body>
    <div class="container mt-4">
        <div class="text-center mb-4">
            <h1>@ViewData["Title"]</h1>
        </div>

        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                @TempData["SuccessMessage"]
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                @TempData["ErrorMessage"]
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        }

        <div id="loader" class="loader d-none" role="status">
            <span class="sr-only">Loading...</span>
        </div>

        <form asp-action="Upload" enctype="multipart/form-data" method="post" id="uploadForm" class="mb-4">
            <div class="form-group">
                <label for="file" class="form-label">File</label>
                <div class="custom-file">
                    <input type="file" class="custom-file-input" id="file" name="file" required />
                    <label class="custom-file-label" for="file">Choose file</label>
                </div>
                <small class="form-text text-muted">Maximum file size: 20 MB</small>
                <div class="text-danger d-none" id="fileSizeError">File size exceeds 20 MB limit.</div>
            </div>
            <div class="form-group">
                <label for="algorithm">Encryption Algorithm</label>
                <select class="custom-select" id="algorithm" name="algorithm" required>
                    <option value="">Select an algorithm</option>
                    <option value="AES">AES</option>
                    <option value="TripleDES">Triple DES</option>
                    <option value="RSA">RSA</option>
                </select>
            </div>
            <button type="submit" class="btn btn-primary btn-block">Encrypt and Upload</button>
        </form>

        <hr />

        <h2 class="mb-3">Encrypted Files</h2>

        @if (Model.EncryptedFiles != null && Model.EncryptedFiles.Any())
        {
            <table id="encryptedFilesTable" class="table table-striped table-bordered">
                <thead class="thead-dark">
                    <tr>
                        <th>File Name</th>
                        <th>Encryption Algorithm</th>
                        <th>Upload Date</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var file in Model.EncryptedFiles)
                    {
                        <tr>
                            <td>@file.FileName</td>
                            <td>@file.EncryptionAlgorithm</td>
                            <td>@file.UploadedAt.ToString("g")</td>
                            <td>
                                <button class="btn btn-danger btn-sm" onclick="decryptAndDelete(@file.Id)">Decrypt and Delete</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>No files found.</p>
        }
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
    <script>
        $(document).ready(function () {
            $('.custom-file-input').on('change', function () {
                var fileName = $(this).val().split('\\').pop();
                $(this).siblings('.custom-file-label').addClass('selected').html(fileName);
            });

            $("#uploadForm").on("submit", function (e) {
                var fileInput = document.getElementById('file');
                var fileSizeError = $("#fileSizeError");

                if (fileInput.files[0].size > 20971520) {
                    fileSizeError.removeClass("d-none");
                    e.preventDefault();
                } else {
                    fileSizeError.addClass("d-none");
                    $("#loader").removeClass("d-none");
                }
            });

            $(window).on("load", function () {
                $("#loader").addClass("d-none");
            });
        });

        function decryptAndDelete(fileId) {
            if (!confirm("Are you sure you want to decrypt and delete this file?")) {
                return;
            }
            $("#loader").removeClass("d-none");

            $.ajax({
                url: '@Url.Action("DecryptAndDelete")',
                type: 'POST',
                data: { id: fileId },
                success: function (response) {
                    $("#loader").addClass("d-none");

                    if (response.success) {
                        alert(response.message);
                        if (response.fileContent) {
                            var blob = new Blob([Uint8Array.from(atob(response.fileContent), c => c.charCodeAt(0))], { type: "application/octet-stream" });
                            var link = document.createElement('a');
                            link.href = window.URL.createObjectURL(blob);
                            link.download = response.fileName;
                            link.click();
                        }
                        location.reload();
                    } else {
                        alert(response.message);
                    }
                },
                error: function () {
                    $("#loader").addClass("d-none");
                    alert("An error occurred while processing your request.");
                }
            });
        }
    </script>
</body>
</html>
